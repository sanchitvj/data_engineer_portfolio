name: Update Content Processing

on:
  push:
    branches: [ dev, optimize ]
    paths:
      - 'docker_images/content_processing.Dockerfile'
      - 'src/penguindb/lambda_function/content_ingestion.py'
      - 'src/penguindb/lambda_function/llm_worker.py'
      - 'src/penguindb/utils/**'
      - '.github/workflows/deploy_content_processing.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC
      contents: read    # Required to read repository content

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: content_processing
          IMAGE_TAG: latest
        run: |
          docker buildx build --platform linux/amd64 --provenance=false -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker_images/content_processing.Dockerfile --push .
          echo "::set-output name=image_uri::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update Content Ingestion Lambda
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: content_processing
          IMAGE_TAG: latest
        run: |
          aws lambda update-function-code --function-name content_ingestion --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Retry Update Content Ingestion Lambda Configuration
        run: |
          for i in {1..5}; do
            aws lambda update-function-configuration --function-name content_ingestion --environment "Variables={GOOGLE_SHEET_URL=${{ secrets.GOOGLE_SHEET_URL }}}" && break || sleep 15;
          done

      - name: Update LLM Worker Lambda
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: content_processing
          IMAGE_TAG: latest
        run: |
          aws lambda update-function-code --function-name llm_worker --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Retry Update LLM Worker Lambda Configuration
        run: |
          for i in {1..5}; do
            aws lambda update-function-configuration --function-name llm_worker --environment "Variables={GOOGLE_SHEET_URL=${{ secrets.GOOGLE_SHEET_URL }}}" && break || sleep 15;
          done