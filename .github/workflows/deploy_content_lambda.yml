name: Deploy Content Lambda

on:
  push:
    branches:
      # - dev
      - content
    paths:
      - src/penguindb/lambda_functions/process_content.py
      - docker_images/content_lambda_image.Dockerfile
      - .github/workflows/deploy_content_lambda.yml
      - src/penguindb/utils/**

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: content_lambda
          IMAGE_TAG: latest

        run: |
          # echo "${_GCP_CREDS}" > src/......lambda_functions/_gcp.json
          # cat src/......lambda_functions/_gcp.json | jq .
          # docker buildx build --platform linux/amd64 --provenance=false -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg GITHUB_TOKEN=${{ secrets._ACCESS_TOKEN }} -f docker_images/content_lambda_image.Dockerfile --push .
          docker buildx build --platform linux/amd64 --provenance=false -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker_images/content_lambda_image.Dockerfile --push .

      - name: Deploy Lambda function
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: content_lambda
          IMAGE_TAG: latest
        run: |
          aws lambda update-function-code --function-name process_content --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Retry Update Lambda Configuration
        run: |
          for i in {1..5}; do
            aws lambda update-function-configuration --function-name process_content --environment "Variables={}" && break || sleep 15;
          done
